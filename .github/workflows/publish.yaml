name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_release:
    permissions:
      contents: write
    name: "Build and release"
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-14, windows-2025, ubuntu-22.04]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies (linux)
      run: sudo apt-get --yes install ninja-build imagemagick flatpak flatpak-builder libsecret-1-dev
      if: matrix.os == 'ubuntu-22.04'

    - name: Install Ninja (windows)
      run: choco install ninja imagemagick
      if: matrix.os == 'windows-2025'

    - name: Install Ninja (mac)
      run: brew install create-dmg imagemagick
      if: matrix.os == 'macos-14'

    - name: Generate icons (windows/linux)
      working-directory: resources
      if: matrix.os == 'windows-2025' || matrix.os == 'ubuntu-22.04'
      shell: bash
      run: |
        mkdir icons
        COMMAND=$(command -v magick || command -v convert)
        for size in 16 32 64 128 256 512; do
          $COMMAND immersion.png -resize ${size}x${size} -filter Lanczos -define filter:support=2 -quality 100 icons/icon-${size}.png;
        done
        $COMMAND icons/icon-* icon.ico

    - name: Generate icons (macos)
      working-directory: resources
      if: matrix.os == 'macos-14'
      run: |
        mkdir Immersion.iconset
        for size in 16 32 64 128 256 512; do
          magick immersion.png -resize ${size}x${size} -filter Lanczos -define filter:support=2 -quality 100 Immersion.iconset/icon_${size}x${size}.png;
        done
        iconutil -c icns Immersion.iconset

    - name: Generate icons (linux/flatpak)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        # Assumes your flatpak app-id is io.github.hytromo.immersion
        APP_ID="io.github.hytromo.immersion"
        COMMAND=$(command -v magick || command -v convert)
        for size in 16 32 64 128 256 512; do
          install -d "flatpak/files/share/icons/hicolor/${size}x${size}/apps"
          $COMMAND resources/immersion.png -resize ${size}x${size} -filter Lanczos -define filter:support=2 -quality 100 "flatpak/files/share/icons/hicolor/${size}x${size}/apps/${APP_ID}.png"
        done

    - name: Install Qt
      uses: jurplel/install-qt-action@v4.3.0
      with:
        version: '6.9.1'
      # Do not install Qt on linux runner, as Flatpak will use its own from the SDK
      if: matrix.os != 'ubuntu-22.04'

    - uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-2025'

    - name: Build
      # Do not run native build for Linux, Flatpak handles its own build process
      if: matrix.os != 'ubuntu-22.04'
      run: cmake -S . -B build -G "Ninja Multi-Config" && cmake --build build --config Release

    # --- Flatpak Build Steps (Linux Only) ---
    - name: Setup Flatpak remote
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install -y --noninteractive flathub org.kde.Platform//6.9 org.kde.Sdk//6.9

    - name: Cache Flatpak builder
      if: matrix.os == 'ubuntu-22.04'
      uses: actions/cache@v4
      with:
        path: ~/.var/app/org.flatpak.Builder/cache
        key: flatpak-builder-cache-${{ hashFiles('flatpak/**') }}
        restore-keys: |
          flatpak-builder-cache-

    - name: Build Flatpak
      if: matrix.os == 'ubuntu-22.04'
      run: |
        flatpak-builder --force-clean flatpak-build flatpak/io.github.hytromo.immersion.yml
        flatpak build-export flatpak-build-export flatpak-build
        flatpak build-bundle flatpak-build-export Immersion.flatpak io.github.hytromo.immersion

    - name: Run windeployqt to gather dependencies
      if: matrix.os == 'windows-2025'
      run: |
        cp ./build/bin/Release/qt6keychain.dll D:/a/immersion/Qt/6.9.1/msvc2022_64/bin/qt6keychain.dll
        windeployqt --release --compiler-runtime --no-translations --no-system-d3d-compiler --no-opengl-sw build/Release/immersion.exe

    - name: Run macdeployqt to gather dependencies and create installer
      if: matrix.os == 'macos-14'
      run: |
        macdeployqt build/Release/immersion.app
        create-dmg --volname "Immersion" \
          --window-pos 200 120 \
          --window-size 500 300 \
          --icon-size 100 \
          --icon "immersion.app" 100 100 \
          --volicon resources/Immersion.icns \
          --app-drop-link 380 100 \
          build/Release/Immersion.dmg \
          build/Release/

    - name: Build Windows Installer using Inno Setup
      if: matrix.os == 'windows-2025'
      run: |
        Invoke-WebRequest -Uri https://jrsoftware.org/download.php/is.exe -OutFile is.exe
        Start-Process -FilePath .\is.exe -ArgumentList '/VERYSILENT' -Wait
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" inno.iss

    - name: Release Windows
      if: matrix.os == 'windows-2025' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: build/installer/ImmersionSetup.exe

    - name: Release macOS
      if: matrix.os == 'macos-14' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: build/Release/Immersion.dmg

    - name: Release Linux (Flatpak)
      if: matrix.os == 'ubuntu-22.04' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: Immersion.flatpak