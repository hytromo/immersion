name: CI
 
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_test:
    permissions:
      contents: write
    name: "Build and test"
    strategy:
      fail-fast: false
      matrix:

        # os: [ubuntu-24.04, windows-2025]
        # os: [windows-2025]
        # os: [macos-14]
        os: [macos-14, windows-2025]
        # do not fail early if one of the jobs fails:
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies (linux)
      run: sudo apt-get --yes install ninja-build imagemagick
      if: matrix.os == 'ubuntu-22.04'

    - name: Install Ninja (windows)   
      run: choco install ninja imagemagick
      if: matrix.os == 'windows-2025'

    - name: Install Ninja (mac)   
      run: brew install create-dmg imagemagick
      if: matrix.os == 'macos-14'

    - name: Generate icons (windows)
      working-directory: resources
      if: matrix.os == 'windows-2025'
      shell: bash
      run: |
        mkdir icons
        for size in 16 32 256; do
          magick immersion.png -resize ${size}x${size} -filter Lanczos -define filter:support=2 -quality 100 icons/icon-${size}.png;
        done
        magick icons/icon-* icon.ico

    - name: Generate icons (macos)
      working-directory: resources
      if: matrix.os == 'macos-14'
      run: |
        mkdir Immersion.iconset
        for size in 16 32 64 128 256 512; do
          magick immersion.png -resize ${size}x${size} -filter Lanczos -define filter:support=2 -quality 100 Immersion.iconset/icon_${size}x${size}.png;
        done
        iconutil -c icns Immersion.iconset

    - name: Install Qt
      uses: jurplel/install-qt-action@v4.3.0
      with:
        version: '6.9.1'

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Build
      run: cmake -S . -B build -G "Ninja Multi-Config" && cmake --build build --config Release

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - name: Run windeployqt to gather dependencies
      if: matrix.os == 'windows-2025'
      run: |
        cp ./build/bin/Release/qt6keychain.dll D:/a/immersion/Qt/6.9.1/msvc2022_64/bin/qt6keychain.dll
        windeployqt --release --compiler-runtime --no-translations --no-system-d3d-compiler --no-opengl-sw build/Release/immersion.exe

    - name: Run macdeployqt to gather dependencies and create installer
      if: matrix.os == 'macos-14'
      run: |
        macdeployqt build/Release/immersion.app
        create-dmg --volname "Immersion" \
           --window-pos 200 120 \
           --window-size 500 300 \
           --icon-size 100 \
           --icon "immersion.app" 100 100 \
           --volicon resources/Immersion.icns \
           --app-drop-link 380 100 \
           build/Release/immersion.dmg \
           build/Release/ 

        Rez -append resources/Immersion.icns -o build/Release/Immersion.icns.rsrc
        SetFile -a C build/Release/immersion.dmg

    - name: Build Windows Installer using Inno Setup
      if: matrix.os == 'windows-2025'
      run: |
        Invoke-WebRequest -Uri https://jrsoftware.org/download.php/is.exe -OutFile is.exe
        Start-Process -FilePath .\is.exe -ArgumentList '/VERYSILENT' -Wait
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" inno.iss

    - name: Release
      if: matrix.os == 'windows-2025' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: build/installer/ImmersionSetup.exe

    - name: Release
      if: matrix.os == 'macos-14' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: build/Release/immersion.dmg
